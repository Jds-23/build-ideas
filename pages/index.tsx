import type { NextPage } from "next";
import Head from "next/head";
import { useState } from "react";
import Button from "../components/Button";
import IdeaCard from "../components/IdeaCard";
import useApp from "../state/app/hooks";
import useNft from "../state/app/useNft";
import useWallet from "../state/wallet/hooks/useWallet";

const Home: NextPage = () => {
  const [idea, setIdea] = useState("");
  const { account } = useWallet();
  const { mint, minting } = useNft();
  const { mintIdea, mintingIdea, allWaves } = useApp();
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="w-full px-4 mx-auto max-w-3xl flex flex-col items-center font-semibold">
        <h1 className="mt-12 text-2xl sm:text-4xl text-center sm:mt-20">
          ðŸ¦„ Welcome, to builspace's idea board
        </h1>
        <p className="text-center text-lg mt-4 sm:mt-7">
          Buildspace Alumni can create ideas and vote or unvote them.
        </p>
        {account ? (
          <>
            <p className="text-center text-sm mt-3 sm:mt-6">
              Since, this is a testnet get your test NFT here.
            </p>
            <Button
              onClick={mint}
              disabled={minting}
              className="text-sm mt-1 sm:mt-3 w-full max-w-[124px]"
            >
              {minting ? "Minting ðŸŒŸ" : "Mint ðŸŒŸ"}
            </Button>
          </>
        ) : (
          <>
            <p className="text-center text-sm mt-3 sm:mt-6">
              Please Connect your wallet.
            </p>
          </>
        )}

        <div className="mt-9 font-bold sm:mt-6 w-full">
          <div className="w-full flex items-center justify-between">
            <p className="text-base sm:text-xl">Ideas</p>
            <div className="flex text-xs sm:text-sm">
              <button className="font-bold mr-3">_sort</button>
              <button className="font-bold">_filter</button>
            </div>
          </div>
          <div className="w-full p-2 mt-1 border border-strokes rounded-lg sm:mt-3 flex items-center">
            <input
              value={idea}
              onChange={(e) => setIdea(e.target.value)}
              placeholder="Mint a idea"
              className="bg-transparent w-full border-none text-base placeholder:text-gray-300 font-semibold"
            />
            <Button
              disabled={mintingIdea}
              onClick={() => {
                if (idea.length > 0) {
                  mintIdea(idea);
                  setIdea("");
                }
              }}
              className="text-sm w-full ml-2 max-w-[124px]"
            >
              {mintingIdea ? "Minting Idea ðŸ’¡" : "Mint Idea ðŸ’¡"}
            </Button>
          </div>
          <div className="w-full mt-3">
            {allWaves &&
              allWaves.map((wave, i) => {
                return (
                  <IdeaCard
                    ideator={wave?.ideator ?? ""}
                    dateCreated={
                      wave?.timestamp
                        ? `${wave.timestamp.getUTCDate()} ${wave.timestamp.getUTCMonth()} ${wave.timestamp.getUTCFullYear()}`
                        : ""
                    }
                    // downVotes={16100}
                    // upVotes={26100}
                    idea={wave?.idea ?? ""}
                    index={i}
                    key={i}
                  />
                );
              })}
          </div>
        </div>
      </main>
    </div>
  );
};

export default Home;
